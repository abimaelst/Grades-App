{"version":3,"sources":["http-common.js","services/GradeService.js","components/AddGrade.js","components/Grade.js","components/GradeList.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","name","AddGrade","initialGradeState","subject","type","value","useState","grade","setGrade","submitted","setSubmitted","handleInputChange","event","target","className","onClick","htmlFor","required","onChange","GradeDataService","then","response","img","console","log","catch","e","Grade","props","currentGrade","setCurrentGrade","message","setMessage","useEffect","match","params","history","push","GradeList","currentIndex","setCurrentIndex","searchName","setSearchName","retrieveGrade","placeholder","map","index","setActiveGrade","key","to","App","href","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b38a4542.chunk.js","sourcesContent":["import axios from 'axios';\n\n//Define a URL base da origem para consumo do servico\nexport default axios.create({\n  baseURL: 'http://localhost:3001/',\n  headers: {\n    'Content-type': 'application/json',\n  },\n});\n","import http from '../http-common';\n\nconst getAll = () => {\n  return http.get('/grade');\n};\n\nconst get = (id) => {\n  return http.get(`/grade/${id}`);\n};\n\nconst create = (data) => {\n  return http.post('/grade', data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/grade/${id}`, data);\n};\n\nconst remove = (id) => {\n  return http.delete(`/grade/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/grade`);\n};\n\nconst findByName = (name) => {\n  return http.get(`/grade?name=${name}`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByName,\n};\n","import React, { useState } from 'react';\nimport GradeDataService from '../services/GradeService';\n\nconst AddGrade = () => {\n  const initialGradeState = {\n    id: null,\n    name: '',\n    subject: '',\n    type: '',\n    value: '',\n  };\n  const [grade, setGrade] = useState(initialGradeState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setGrade({ ...grade, [name]: value });\n  };\n\n  const saveGrade = () => {\n    var data = {\n      name: grade.name,\n      subject: grade.subject,\n      type: grade.type,\n      value: grade.value,\n    };\n\n    GradeDataService.create(data)\n      .then((response) => {\n        setGrade({\n          id: response.data.id,\n          name: response.data.name,\n          subject: response.data.img,\n          type: response.data.type,\n          value: response.data.value,\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const newGrade = () => {\n    setGrade(initialGradeState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newGrade}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              required\n              value={grade.name}\n              onChange={handleInputChange}\n              name=\"name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"subject\">Subject</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"subject\"\n              required\n              value={grade.subject}\n              onChange={handleInputChange}\n              name=\"subject\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"type\"\n              required\n              value={grade.type}\n              onChange={handleInputChange}\n              name=\"type\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"value\">Value</label>\n            <input\n              type=\"Number\"\n              className=\"form-control\"\n              id=\"value\"\n              required\n              value={grade.value}\n              onChange={handleInputChange}\n              name=\"value\"\n            />\n          </div>\n          <button onClick={saveGrade} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddGrade;\n","import React, { useState, useEffect } from 'react';\nimport GradeDataService from '../services/GradeService';\n\nconst Grade = (props) => {\n  const initialGradeState = {\n    id: null,\n    name: '',\n    subject: '',\n    type: '',\n    value: '',\n  };\n  const [currentGrade, setCurrentGrade] = useState(initialGradeState);\n  const [message, setMessage] = useState('');\n\n  const getGrade = (id) => {\n    GradeDataService.get(id)\n      .then((response) => {\n        setCurrentGrade(response.data);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getGrade(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCurrentGrade({ ...currentGrade, [name]: value });\n  };\n\n  const updateGrade = () => {\n    GradeDataService.update(currentGrade.id, currentGrade)\n      .then((response) => {\n        setMessage('The grade was updated successfully!');\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const deleteGrade = () => {\n    GradeDataService.remove(currentGrade.id)\n      .then((response) => {\n        props.history.push('/grade');\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentGrade ? (\n        <div className=\"edit-form\">\n          <h4>Grade</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                name=\"name\"\n                value={currentGrade.name}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"subject\">Subject</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"subject\"\n                name=\"subject\"\n                value={currentGrade.subject}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"type\">Type</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"type\"\n                name=\"type\"\n                value={currentGrade.type}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"value\">Value</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"value\"\n                name=\"value\"\n                value={currentGrade.value}\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteGrade}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateGrade}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Grade...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Grade;\n","import React, { useState, useEffect } from 'react';\nimport GradeDataService from '../services/GradeService';\nimport { Link } from 'react-router-dom';\n\nconst GradeList = () => {\n  const [grade, setGrade] = useState([]);\n  const [currentGrade, setCurrentGrade] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchName, setSearchName] = useState('');\n\n  useEffect(() => {\n    retrieveGrade();\n  }, []);\n\n  const onChangeSearchName = (e) => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const retrieveGrade = () => {\n    GradeDataService.getAll()\n      .then((response) => {\n        setGrade(response.data);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveGrade();\n    setCurrentGrade(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveGrade = (grade, index) => {\n    setCurrentGrade(grade);\n    setCurrentIndex(index);\n  };\n\n  const removeAllGrade = () => {\n    GradeDataService.removeAll()\n      .then((response) => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const findByName = () => {\n    GradeDataService.findByName(searchName)\n      .then((response) => {\n        setGrade(response.data);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by name\"\n            value={searchName}\n            onChange={onChangeSearchName}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByName}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Grade List</h4>\n\n        <ul className=\"list-group\">\n          {grade &&\n            grade.map((grade, index) => (\n              <li\n                className={\n                  'list-group-item ' + (index === currentIndex ? 'active' : '')\n                }\n                onClick={() => setActiveGrade(grade, index)}\n                key={index}\n              >\n                {grade.name}\n              </li>\n            ))}\n        </ul>\n\n        <button className=\"m-3 btn btn-sm btn-danger\" onClick={removeAllGrade}>\n          Remove All\n        </button>\n      </div>\n      <div className=\"col-md-6\">\n        {currentGrade ? (\n          <div>\n            <h4>Grade</h4>\n            <div>\n              <label>\n                <strong>Name:</strong>\n              </label>{' '}\n              {currentGrade.name}\n            </div>\n            <div>\n              <label>\n                <strong>Subject:</strong>\n              </label>{' '}\n              {currentGrade.subject}\n            </div>\n            <div>\n              <label>\n                <strong>Type:</strong>\n              </label>{' '}\n              {currentGrade.type}\n            </div>\n            <div>\n              <label>\n                <strong>Value:</strong>\n              </label>{' '}\n              {currentGrade.value}\n            </div>\n\n            <Link\n              to={'/grade/' + currentGrade.id}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Grade...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GradeList;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AddGrade from './components/AddGrade';\nimport Grade from './components/Grade';\nimport GradeList from './components/GradeList';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/grade\" className=\"navbar-brand\">\n            Aplicativo\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={'/grade'} className=\"nav-link\">\n                Grades\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={'/add'} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={['/', '/grade']} component={GradeList} />\n            <Route exact path=\"/add\" component={AddGrade} />\n            <Route path=\"/grade/:id\" component={Grade} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}